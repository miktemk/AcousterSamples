
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = '\x80\xeaf\xe0*0!\xe6\x83\x87\xfe7\xc4w\x1eT'
    
_lr_action_items = {'cmdAUTHOR':([0,2,3,5,6,14,19,20,25,26,27,],[1,-9,-8,-6,1,1,-4,-2,-3,-5,-7,]),'cmdG':([13,21,22,28,30,32,34,36,37,39,40,42,43,47,],[-24,-15,-24,-24,-17,-24,-24,-19,-16,45,-21,-18,-14,-20,]),'SLIDE_DIALOG':([0,2,3,5,6,14,19,20,25,26,27,],[3,-9,-8,-6,3,3,-4,-2,-3,-5,-7,]),'cmdT':([13,21,22,32,43,],[-24,-15,29,-24,-14,]),'cmdDLG':([0,2,3,5,6,14,19,20,25,26,27,],[4,-9,-8,-6,4,4,-4,-2,-3,-5,-7,]),'cmdV':([13,21,22,28,30,32,37,43,],[-24,-15,-24,35,-17,-24,-16,-14,]),'cmdP':([0,2,3,5,6,14,19,20,25,26,27,],[5,-9,-8,-6,5,5,-4,-2,-3,-5,-7,]),'EQUALS':([1,4,7,8,10,],[11,12,16,17,18,]),'cmdSTAR':([2,3,5,6,13,14,19,20,21,22,23,25,26,27,28,30,32,34,36,37,39,40,42,43,44,46,47,48,],[-9,-8,-6,13,-24,-10,-4,-2,-15,-24,32,-3,-5,-7,-24,-17,-24,-24,-19,-16,-24,-21,-18,-14,-13,-23,-20,-22,]),'cmdDIC':([0,2,3,5,6,14,19,20,25,26,27,],[7,-9,-8,-6,7,7,-4,-2,-3,-5,-7,]),'cmdICON':([0,2,3,5,6,14,19,20,25,26,27,],[8,-9,-8,-6,8,8,-4,-2,-3,-5,-7,]),'WAV_FILENAME':([0,2,3,5,6,14,19,20,25,26,27,],[2,-9,-8,-6,2,2,-4,-2,-3,-5,-7,]),'JUMBLE':([11,12,16,17,18,24,29,35,38,41,45,],[19,20,25,26,27,33,37,42,43,47,48,]),'cmdE':([0,2,3,5,6,14,19,20,25,26,27,33,],[10,-9,-8,-6,10,10,-4,-2,-3,-5,-7,38,]),'cmdS':([13,32,],[24,24,]),'cmdB':([13,21,22,28,30,32,34,36,37,42,43,],[-24,-15,-24,-24,-17,-24,41,-19,-16,-18,-14,]),'$end':([9,15,31,32,],[0,-1,-12,-11,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'entryV':([28,],[34,]),'entryT':([22,],[28,]),'entryB':([34,],[39,]),'header':([0,6,14,],[6,14,14,]),'entry_list':([6,23,],[15,31,]),'whole_fucking_file':([0,],[9,]),'entrySE':([13,32,],[22,22,]),'entry':([13,32,],[23,23,]),'empty':([13,22,28,32,34,39,],[21,30,36,21,40,46,]),'entryG':([39,],[44,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> whole_fucking_file","S'",1,None,None,None),
  ('whole_fucking_file -> header entry_list','whole_fucking_file',2,'p_whole_fucking_file','Ztoxml.py',24),
  ('header -> cmdDLG EQUALS JUMBLE','header',3,'p_header_dialog','Ztoxml.py',30),
  ('header -> cmdDIC EQUALS JUMBLE','header',3,'p_header_dic','Ztoxml.py',33),
  ('header -> cmdAUTHOR EQUALS JUMBLE','header',3,'p_header_author','Ztoxml.py',36),
  ('header -> cmdICON EQUALS JUMBLE','header',3,'p_header_icon','Ztoxml.py',39),
  ('header -> cmdP','header',1,'p_header_ppp','Ztoxml.py',41),
  ('header -> cmdE EQUALS JUMBLE','header',3,'p_header_edlg','Ztoxml.py',43),
  ('header -> SLIDE_DIALOG','header',1,'p_header_SlideDialog','Ztoxml.py',46),
  ('header -> WAV_FILENAME','header',1,'p_header_wav','Ztoxml.py',48),
  ('header -> header header','header',2,'p_header','Ztoxml.py',51),
  ('entry_list -> cmdSTAR entry cmdSTAR','entry_list',3,'p_entry_list','Ztoxml.py',55),
  ('entry_list -> cmdSTAR entry entry_list','entry_list',3,'p_entry_list_rec','Ztoxml.py',58),
  ('entry -> entrySE entryT entryV entryB entryG','entry',5,'p_entry','Ztoxml.py',61),
  ('entrySE -> cmdS JUMBLE cmdE JUMBLE','entrySE',4,'p_entrySE','Ztoxml.py',71),
  ('entrySE -> empty','entrySE',1,'p_entrySE','Ztoxml.py',72),
  ('entryT -> cmdT JUMBLE','entryT',2,'p_entryT','Ztoxml.py',79),
  ('entryT -> empty','entryT',1,'p_entryT','Ztoxml.py',80),
  ('entryV -> cmdV JUMBLE','entryV',2,'p_entryV','Ztoxml.py',85),
  ('entryV -> empty','entryV',1,'p_entryV','Ztoxml.py',86),
  ('entryB -> cmdB JUMBLE','entryB',2,'p_entryB','Ztoxml.py',91),
  ('entryB -> empty','entryB',1,'p_entryB','Ztoxml.py',92),
  ('entryG -> cmdG JUMBLE','entryG',2,'p_entryG','Ztoxml.py',97),
  ('entryG -> empty','entryG',1,'p_entryG','Ztoxml.py',98),
  ('empty -> <empty>','empty',0,'p_empty','Ztoxml.py',106),
]
